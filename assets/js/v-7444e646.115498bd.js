"use strict";(self.webpackChunkmarket_docs=self.webpackChunkmarket_docs||[]).push([[47],{28:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-7444e646",path:"/bff/",title:"轻舟 BFF 服务说明",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"开发指引",slug:"开发指引",children:[{level:3,title:"安装依赖",slug:"安装依赖",children:[]},{level:3,title:"配置环境变量",slug:"配置环境变量",children:[]},{level:3,title:"服务启动和停止",slug:"服务启动和停止",children:[]}]},{level:2,title:"目录说明",slug:"目录说明",children:[]}],filePathRelative:"bff/README.md",git:{updatedTime:1633602081e3,contributors:[{name:"hanzhou",email:"hanzhou@gaoding.com",commits:1}]}}},567:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});const e=(0,a(252).uE)('<h1 id="轻舟-bff-服务说明" tabindex="-1"><a class="header-anchor" href="#轻舟-bff-服务说明" aria-hidden="true">#</a> 轻舟 BFF 服务说明</h1><h2 id="开发指引" tabindex="-1"><a class="header-anchor" href="#开发指引" aria-hidden="true">#</a> 开发指引</h2><h3 id="安装依赖" tabindex="-1"><a class="header-anchor" href="#安装依赖" aria-hidden="true">#</a> 安装依赖</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">install</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="配置环境变量" tabindex="-1"><a class="header-anchor" href="#配置环境变量" aria-hidden="true">#</a> 配置环境变量</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">cp</span> .env.example .env\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="服务启动和停止" tabindex="-1"><a class="header-anchor" href="#服务启动和停止" aria-hidden="true">#</a> 服务启动和停止</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># start server on production mode</span>\n<span class="token function">yarn</span> start\n<span class="token comment"># start server on development mode</span>\n<span class="token function">yarn</span> dev\n\n<span class="token comment"># stop server</span>\n<span class="token comment"># if run server in production mode an open daemon</span>\n<span class="token function">yarn</span> stop\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="目录说明" tabindex="-1"><a class="header-anchor" href="#目录说明" aria-hidden="true">#</a> 目录说明</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>├── Dockerfile                     <span class="token comment"># Docker 配置</span>\n├── Jenkinsfile                    <span class="token comment"># Jenkins 配置</span>\n├── README.md                      <span class="token comment"># 说明文档</span>\n├── app\n│   ├── constant                   <span class="token comment"># 常量</span>\n│   ├── controller                 <span class="token comment"># 控制器</span>\n│   ├── extend                     <span class="token comment"># 扩展</span>\n│   ├── grpc                       <span class="token comment"># rpc</span>\n│   ├── grpc-pb                    <span class="token comment"># rpc</span>\n│   ├── lib\n│   ├── middleware                 <span class="token comment"># 中间件</span>\n│   ├── parameter                  <span class="token comment"># 公共请求参数</span>\n│   ├── <span class="token function">service</span>                    <span class="token comment"># 服务层，请求后端接口</span>\n│   └── util                       <span class="token comment"># 工具函数</span>\n├── app.ts                         <span class="token comment"># 入口文件</span>\n├── commitlint.config.js           <span class="token comment"># commit 格式校验</span>\n├── config                         <span class="token comment"># 项目配置</span>\n├── dind.cicd.config.js            <span class="token comment"># 钉钉配置</span>\n├── docker-entrypoint.sh           <span class="token comment"># Docker</span>\n├── env.ts                         <span class="token comment"># 环境变量</span>\n├── market-types                   <span class="token comment"># 类型文件</span>\n├── nodemon.json\n├── package.json\n├── plop                           <span class="token comment"># 文件自动生成模板和规则</span>\n├── plopfile.js                    <span class="token comment"># 文件生成配置</span>\n├── service-entrypoint\n├── tsconfig.json                  <span class="token comment"># ts 配置</span>\n├── typings                        <span class="token comment"># 类型自动生成</span>\n└── yarn.lock\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div>',10),l={},p=(0,a(744).Z)(l,[["render",function(n,s){return e}]])},744:(n,s)=>{s.Z=(n,s)=>{for(const[a,e]of s)n[a]=e;return n}}}]);